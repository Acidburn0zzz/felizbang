#!/bin/bash

# The FelizBang installation scripts for Openbox Arch Linux
# May 2016

# feliz - Main module

# Developed by Elizabeth Mills, incorporating some code adapted with thanks
# from the Evo/Lution script by Carl Duff and AUI scripts by HelmuthDU.

# Declare variables
#
# 1) Partitioning variables and arrays
declare -a AddPartList    # Array of additional partitions eg: /dev/sda5
declare -a AddPartMount   # Array of mountpoints for the same partitions eg: /home
declare -a AddPartType    # Array of format type for the same partitions eg: ext4
declare -a PartitionArray # Array of long identifiers
declare -a NewArray       # For copying any array
declare -A LabellingArray # Associative array of user labels for partitions
declare -A Labelled       # Associative array of labelled partitions
declare -A FileSystem     # Associative array of filesystem types (ext* swap)
SwapPartition=""  # eg: /dev/sda3
FormatSwap="N"    # User selects whether to reuse swap
MakeSwap="Y"
SwapFile=""       # eg: 2G
IsSwap=""         # Result of lsblk test
RootPartition=""  # eg: /dev/sda2
RootType=""       # eg: ext4
Partition=""      # eg: sda1
AutoPart=0        # Flag - changes to 1 if auto-partition is chosen
UseDisk="sda"     # Used if more than one disk
DiskDetails=0     # Size of selected disk
#
# 2) Grub, kernel & EFI variables
GrubDevice=""     # eg: /dev/sda
Kernel="1"        # Default 1 = LTS
IsInVbox=""       # Result of test to see if installation is in Virtualbox
DualBoot="N"      # Ready for dual-booting option
EFIPartition=""   # Will hold EFI partition mountpoint in format "/dev/sda1"
OSprober="Y"
#
# 3) Location variables
CountryCode=""    # eg: GB ... for mirrorlist
CountryLocale=""  # eg: en_GB.UTF-8
Countrykbd=""     # eg: uk
ZONE=""           # eg: Europe For time
SUBZONE=""        # eg: London
#
# 4) Root and user variables
HostName=""  # eg: arch-linux
UserName=""  # eg: archie
Scope="Full" # Installation scope ... hangover from Feliz
#
# 5) Global user input variables
Response=""
Result=""

#
# Include source files
source setup
source running

Backtitle="The FelizBang install scripts for Openbox Arch Linux"

StartTime=$(date +%s)
echo "${StartTime}" >> feliz.log

# Check partition table & offer options
CheckParts

if [ $AutoPart -eq 0 ]; then
  BuildPartitionLists # Display information about the available partitions
  AllocateRoot
  if [ -n "${PartitionList}" ]
  then
    AllocateSwap  # Display remaining partitions and allocate swap
  fi
  if [ -n "${PartitionList}" ]  # Check contents of PartitionList again
  then
    MorePartitions
  fi
fi

# Select kernel and device for Grub
SetKernel
if [ $AutoPart -eq 0 ]; then
  SetGrubDevice
fi

# Keyboard layout
getkeymap

# Localisation
SetTimeZone
setlocale
SetHostname
SetUserName

# Use dmidecode to check for Virtualbox installation
IsInVbox=`dmidecode --type 1 | grep 'Product Name' | cut -c 16-`
if [ ${IsInVbox} = "VirtualBox" ]; then
  ConfirmVbox
else
  IsInVbox=""
fi

# Allow user to change any variables
FinalCheck

# No further user intervention from here ..................

MountPartitions

ReflectorMirrorList

InstallKernel

TPecho "Preparing local services" ""

# Set the default PATH variable
arch_chroot "PATH=/usr/lib/systemd/system:/etc/systemd/system:/usr/local/sbin:/usr/local/bin:/usr/bin"

# Generate fstab
genfstab -U -p /mnt > /mnt/etc/fstab 2>> feliz.log

# Swap
if [ ${SwapFile} ]; then
  fallocate -l ${SwapFile} /mnt/swapfile >/dev/null 2>> feliz.log
  chmod 600 /mnt/swapfile >/dev/null &>> feliz.log
  mkswap /mnt/swapfile >/dev/null &>> feliz.log
  swapon /mnt/swapfile >/dev/null &>> feliz.log
  echo "/swapfile none  swap  defaults  0 0" >> /mnt/etc/fstab 2>> feliz.log
fi

# Hostname, locale, etc
echo ${HostName} > /mnt/etc/hostname 2>> feliz.log
sed -i "/127.0.0.1/s/$/ ${HostName}/" /mnt/etc/hosts 2>> feliz.log
sed -i "/::1/s/$/ ${HostName}/" /mnt/etc/hosts 2>> feliz.log
# Set up locale, etc
echo "${CountryLocale} UTF-8" > /mnt/etc/locale.gen 2>> feliz.log # eg: en_US.UTF-8 UTF-8
arch_chroot "locale-gen"
echo "LANG=${CountryLocale}" > /mnt/etc/locale.conf 2>> feliz.log # eg: LANG=en_US.UTF-8
export "LANG=${CountryLocale}" &>> feliz.log                      # eg: LANG=en_US.UTF-8
arch_chroot "ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime"
arch_chroot "hwclock --systohc --utc"

# Networking
arch_chroot "systemctl enable dhcpcd.service"
pacstrap /mnt networkmanager network-manager-applet rp-pppoe &>> feliz.log
arch_chroot "systemctl enable NetworkManager.service && systemctl enable NetworkManager-dispatcher.service"

# Grub
if [ ${GrubDevice} ]; then
  TPecho "Installing Grub2 to $GrubDevice" ""
  pacstrap /mnt grub &>> feliz.log
  if [ $OSprober = "Y" ]; then
    pacstrap /mnt os-prober &>> feliz.log
  fi
  arch_chroot "grub-install --target=i386-pc --recheck ${GrubDevice}"
  arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
else
  echo "Not installing Grub" >> feliz.log
fi

McInitCPIO # Function to run mkinitcpio

# Set keyboard to selected language at next startup
echo KEYMAP=${Countrykbd} > /mnt/etc/vconsole.conf 2>> feliz.log

AddCodecs       # Various bits

InstallLuxuries # Install Openbox, applications and lightdm

UserAdd         # Add user and set up groups

# Copy Openbox .conf and .xml files ...
mkdir -p /mnt/home/$UserName/.config/openbox
read -p "$LINENO"
cp rc.xml menu.xml /mnt/home/$UserName/.config/openbox
read -p "$LINENO"
cp conkyrc /mnt/home/$UserName/.conkyrc
read -p "$LINENO"
cp bl-exit /mnt/usr/bin/
read -p "$LINENO"
mkdir -p /home/$UserName/Pictures/Wallpapers
read -p "$LINENO"
cp wallpaper.jpg /mnt/home/$UserName/Pictures/Wallpapers
read -p "$LINENO"
arch_chroot "chown -R ${UserName}:users /home/${UserName}" &>> feliz.log # I don't know what this does, but it is in lution.ais
read -p "$LINENO"

# Setup needed here for startup file (with wallpaper setting)

EndTime=$(date +%s)
Difference=$(( $EndTime-$StartTime ))
DIFFMIN=$(( $Difference / 60 ))
DIFFSEC=$(( $Difference % 60 ))

SetRootPassword
SetUserPassword

cp feliz.log /mnt/etc # Copy installation log for reference

DisplayFinished

shutdown -h now
